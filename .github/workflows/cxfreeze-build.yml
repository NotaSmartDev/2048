name: Python package

on:
  push:
    branches:
      - pygame
      - 'releases/*'

    paths:
      - '*.py'

jobs:
  build:

    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade cx_Freeze
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Compile with cx_Freeze
      run: |
        python setup.py build
    - name: Zip UNIX app
      if: matrix.os ! windows-latest
      run: |
        zip ${{matrix.os}}-build.zip build/ -r
    - name: Zip Windows app
      if: matrix.os == windows-latest
      run: |
        powershell.exe -nologo -noprofile -command "& { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::CreateFromDirectory('build', 'windows-build.zip'); }"
